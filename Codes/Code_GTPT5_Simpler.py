def fGTPT5_Simpler(import_location, export_location, add_data_to_new_file, add_data_to_original_file):        import os    import pandas as pd    from openpyxl import load_workbook    import sys    from tqdm import tqdm        # Create a loop over every excel file in the import location.        import_files = [file for file in os.listdir(import_location) if (file.endswith(".xlsx") and file.startswith("~$")==False)]        for filename in tqdm(import_files, ncols=70):                # Import the excel data                import_name = filename        import_destination = import_location + import_name        export_name = 'Sorted ' + import_name        export_destination = export_location + export_name                df = pd.read_excel(import_destination, sheet_name=0)                        # Delete the unnecessary rows.                del_indicies = []                for i in range(len(df['SystemMsg'])):            if df.at[i,'SystemMsg'] != 'end exp' and df.at[i,'outLabel'] != 'positive' and df.at[i,'SystemMsg'] != 'wrong' and df.at[i,'SystemMsg'] != 'start exp':                del_indicies.append(i)                        df = df.drop(del_indicies)                # Rename the trials to 'wrong (WW)' and 'positive (WP)' when there is a 'wrong' in the trial before.        for i in range(len(df['SystemMsg'])):            if i == 0:                continue            else:                if df['SystemMsg'].iloc[i-1] == 'wrong' or df['SystemMsg'].iloc[i-1] == 'wrong (WW)':                    if df['outLabel'].iloc[i] == 'positive':                        df['outLabel'].iloc[i] = 'positive (WP)'                    elif df['SystemMsg'].iloc[i] == 'wrong':                        df['SystemMsg'].iloc[i] = 'wrong (WW)'                else:                    continue                        # Ensure that the DateTime column is in a datetime format and not a string.        if type(df['DateTime'].iloc[0]) == str:            possible_formats = [None, '%d/%m/%Y %H.%M.%S.%f']            for form in possible_formats:                df['DateTime'] = pd.to_datetime(df['DateTime'], format=form, errors='ignore')                if type(df['DateTime'].iloc[0]) != str:                    start_time = pd.to_datetime(start_time, format=form)                    end_time   = pd.to_datetime(end_time, format=form)                    break            if type(df['DateTime'].iloc[0]) == str:                print('A new datetime format needs to be included in the code.')                sys.exit()                # Sort the data.                                df = df.sort_values(by=['outLabel','DateTime','IdRFID'], na_position='last')                # If there is no end exp before a start exp, add one in.                no_end_exp = []        df.index = list(range(len(df)))                for i in range(len(df['SystemMsg'])):            if i!=0 and df['SystemMsg'].iloc[i]=='start exp' and df['SystemMsg'].iloc[i-1]!='end exp':                no_end_exp.append(i-1)                        for ind in no_end_exp:            df.loc[ind+0.5] = df.loc[ind]            df.at[ind+0.5,'DateTime'] = np.nan            df.at[ind+0.5,'SystemMsg'] = 'end exp'        df = df.sort_index()        df.index = list(range(len(df)))                # Export the data.                if add_data_to_new_file == True:                    with pd.ExcelWriter(export_destination) as writer:                df.to_excel(writer, sheet_name='Sorted sheet', engine='openpyxl', index=False, header=True)                          elif add_data_to_original_file == True:                        with pd.ExcelWriter(import_destination, mode='a', engine='openpyxl') as writer:                df.to_excel(writer, sheet_name='Sorted sheet', engine='openpyxl', index=False, header=True)            os.rename(import_destination, import_location + 'Sorted ' + filename)# Uncomment this section below to run the code manually.# import_location = 'C:/Users/hazza/Desktop/Phenosys data/Import folder/'# export_location = 'C:/Users/hazza/Desktop/Phenosys data/Export folder/'# add_data_to_new_file = True# add_data_to_original_file = False# fGTPT5_Simpler(import_location, export_location, add_data_to_new_file, add_data_to_original_file)